import { compat, types as T } from "../../deps.ts";

export const setConfig: T.ExpectedExports.setConfig = async (
  effects: T.Effects,
  input: T.Config,
) => {
  // Generate Haven .env file from Start9 configuration
  const relayConfig = input["relay-config"];

  // Build .env file content
  const envContent = `# Haven Configuration - Generated by Start9
# Network Configuration
RELAY_PORT=3355
RELAY_BIND_ADDRESS=0.0.0.0
RELAY_URL=http://localhost:3355

# Database Configuration
DB_ENGINE=${relayConfig["database-engine"]}
LMDB_MAPSIZE=273000000000

# Storage Paths
BLOSSOM_PATH=/data/blossom

# Relay Toggles
PRIVATE_RELAY_ENABLED=${relayConfig["private-relay"]}
CHAT_RELAY_ENABLED=${relayConfig["chat-relay"]}
INBOX_RELAY_ENABLED=${relayConfig["inbox-relay"]}
OUTBOX_RELAY_ENABLED=${relayConfig["outbox-relay"]}
BLOSSOM_ENABLED=${relayConfig["blossom-server"]}

# Private Relay Configuration
PRIVATE_RELAY_NAME=Private
PRIVATE_RELAY_DESCRIPTION=Private drafts and sensitive content
PRIVATE_RELAY_ICON=ðŸ”’
PRIVATE_TOKENS_PER_INTERVAL=10
PRIVATE_TOKEN_INTERVAL_SECONDS=60
PRIVATE_MAX_TOKENS=50

# Chat Relay Configuration
CHAT_RELAY_NAME=Chat
CHAT_RELAY_DESCRIPTION=Direct messaging with web-of-trust
CHAT_RELAY_ICON=ðŸ’¬
CHAT_WOT_DEPTH=3
CHAT_TOKENS_PER_INTERVAL=20
CHAT_TOKEN_INTERVAL_SECONDS=60
CHAT_MAX_TOKENS=100

# Inbox Relay Configuration
INBOX_RELAY_NAME=Inbox
INBOX_RELAY_DESCRIPTION=Mentions and interactions
INBOX_RELAY_ICON=ðŸ“¥
INBOX_PULL_INTERVAL_MINUTES=5
INBOX_TOKENS_PER_INTERVAL=30
INBOX_TOKEN_INTERVAL_SECONDS=60
INBOX_MAX_TOKENS=150

# Outbox Relay Configuration
OUTBOX_RELAY_NAME=Outbox
OUTBOX_RELAY_DESCRIPTION=Public posts and content
OUTBOX_RELAY_ICON=ðŸ“¤
OUTBOX_TOKENS_PER_INTERVAL=50
OUTBOX_TOKEN_INTERVAL_SECONDS=60
OUTBOX_MAX_TOKENS=200

# Backup Configuration
BACKUP_PROVIDER=none

# Logging
HAVEN_LOG_LEVEL=INFO

# Web of Trust
WOT_FETCH_TIMEOUT_SECONDS=30

# Import Settings
IMPORT_START_DATE=2020-01-01
IMPORT_FETCH_TIMEOUT_SECONDS=10
`;

  // Create config directory
  await effects.createDir({ volumeId: "main", path: "start9" });

  // Write Haven .env file content to data volume
  // docker_entrypoint.sh will copy this to /haven/.env
  await effects.writeFile({
    volumeId: "main",
    path: "start9/haven.env",
    toWrite: [envContent],
  });

  // Save Start9 config for properties and other uses
  await effects.writeFile({
    volumeId: "main",
    path: "start9/config.yaml",
    toWrite: [
      {
        "tor-address": input["tor-address"],
        "lan-address": input["lan-address"],
        "relay-config": relayConfig,
      },
    ],
  });

  return await compat.setConfig(effects, input);
};
